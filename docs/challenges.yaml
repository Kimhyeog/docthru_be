paths:
  /challenges:
    get:
      summary: "챌린지 목록 조회"
      description: "검색, 필터, 페이지네이션을 지원하는 챌린지 목록 API"
      tags:
        - challenges
      parameters:
        - name: cursor
          in: query
          description: "페이지네이션을 위한 커서 (이전 요청의 nextCursor 값)"
          schema:
            type: string
        - name: pageSize
          in: query
          description: "한 페이지에 가져올 챌린지 개수"
          schema:
            type: integer
            default: 5
        - name: keyword
          in: query
          description: "챌린지 제목 검색어"
          schema:
            type: string
        - name: field
          in: query
          description: "챌린지 분야 필터"
          schema:
            type: string
            enum: [NEXTJS, CAREER, MODERNJS, WEB, API]
        - name: docType
          in: query
          description: "문서 타입 필터"
          schema:
            type: string
            enum: [BLOG, DOCS]
        - name: progress
          in: query
          description: "챌린지 진행 상태 필터"
          schema:
            type: string
            enum: [OPEN, CLOSED, IN_PROGRESS]
      responses:
        "200":
          description: "성공적으로 챌린지 목록을 반환"
          content:
            application/json:
              schema:
                type: object
                properties:
                  challenges:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "4ceca442-fd58-45c0-9415-435cf8c8845c"
                        title:
                          type: string
                          example: "Study Group Recruitment"
                        field:
                          type: string
                          example: "NEXTJS"
                        docType:
                          type: string
                          example: "BLOG"
                        docUrl:
                          type: string
                          format: uri
                          example: "https://example.com/document.pdf"
                        deadline:
                          type: string
                          format: date-time
                          example: "2025-02-01T23:59:59.999Z"
                        progress:
                          type: string
                          example: "COMPLETED"
                        participants:
                          type: integer
                          example: 1
                        maxParticipants:
                          type: integer
                          example: 10
                        content:
                          type: string
                          example: "Join our study group to improve web development skills!"
                  nextCursor:
                    type: string
                    nullable: true
                    example: "xyz789"
        "400":
          description: "잘못된 요청 (예: 유효하지 않은 필터 값)"
        "500":
          description: "서버 오류"
    post:
      summary: "챌린지 생성"
      description: "새로운 챌린지를 생성하는 API (생성 후 자동으로 신청됨)"
      tags:
        - challenges
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - field
                - docType
                - docUrl
                - deadline
                - maxParticipants
                - content
              properties:
                title:
                  type: string
                  description: "챌린지 제목"
                  example: "Next.js 챌린지"
                field:
                  type: string
                  description: "챌린지 분야"
                  enum: [NEXTJS, CAREER, MODERNJS, WEB, API]
                  example: "NEXTJS"
                docType:
                  type: string
                  description: "문서 타입"
                  enum: [BLOG, DOCS]
                  example: "BLOG"
                docUrl:
                  type: string
                  description: "문서 URL"
                  format: uri
                  example: "https://example.com/doc"
                deadline:
                  type: string
                  format: date-time
                  description: "챌린지 마감 기한 (ISO 8601 형식)"
                  example: "2025-03-01T23:59:59Z"
                maxParticipants:
                  type: integer
                  description: "최대 참여 인원"
                  example: 10
                content:
                  type: string
                  description: "챌린지 설명"
                  example: "이 챌린지는 Next.js를 배우고 블로그로 기록하는 챌린지입니다."
      responses:
        "200":
          description: "챌린지 생성 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  title:
                    type: string
                    example: "Next.js 챌린지"
                  field:
                    type: string
                    example: "NEXTJS"
                  docType:
                    type: string
                    example: "BLOG"
                  docUrl:
                    type: string
                    example: "https://example.com/doc"
                  deadline:
                    type: string
                    format: date-time
                    example: "2025-03-01T23:59:59Z"
                  participants:
                    type: integer
                    description: "현재 참여 인원"
                    example: 1
                  progress:
                    type: string
                    description: "진행상황"
                    example: "PROGRESS"
                  maxParticipants:
                    type: integer
                    example: 10
                  content:
                    type: string
                    example: "이 챌린지는 Next.js를 배우고 블로그로 기록하는 챌린지입니다."
        "400":
          description: "잘못된 요청 (입력값 검증 실패)"
        "401":
          description: "인증 실패 (로그인 필요)"
        "500":
          description: "서버 오류"
  /challenges/{challengeId}:
    get:
      summary: "챌린지 상세 조회"
      description: "특정 챌린지의 상세 정보를 가져오는 API"
      tags:
        - challenges
      parameters:
        - name: challengeId
          in: path
          required: true
          description: "조회할 챌린지의 ID"
          schema:
            type: string
      responses:
        "200":
          description: "성공적으로 챌린지를 반환"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  title:
                    type: string
                    example: "Next.js 챌린지"
                  field:
                    type: string
                    example: "NEXTJS"
                  docType:
                    type: string
                    example: "BLOG"
                  progress:
                    type: string
                    example: "OPEN"
        "404":
          description: "챌린지를 찾을 수 없음"
        "500":
          description: "서버 오류"
    put:
      summary: "챌린지 수정 (관리자 전용용)"
      description: "관리자가 특정 챌린지의 수정하는 API"
      tags:
        - challenges
      parameters:
        - name: challengeId
          in: path
          required: true
          description: "수정할 챌린지의 ID"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: "챌린지 제목"
                  example: "Updated Next.js 챌린지"
                field:
                  type: string
                  description: "챌린지 분야"
                  enum: [NEXTJS, CAREER, MODERNJS, WEB, API]
                  example: "NEXTJS"
                docType:
                  type: string
                  description: "문서 타입"
                  enum: [BLOG, DOCS]
                  example: "BLOG"
                docUrl:
                  type: string
                  description: "문서 URL"
                  format: uri
                  example: "https://example.com/doc"
                deadline:
                  type: string
                  format: date-time
                  description: "챌린지 마감 기한 (ISO 8601 형식)"
                  example: "2025-03-01T23:59:59Z"
                maxParticipants:
                  type: integer
                  description: "최대 참여 인원"
                  example: 10
                content:
                  type: string
                  description: "챌린지 설명"
                  example: "이 챌린지는 Next.js를 배우고 블로그로 기록하는 챌린지입니다."
      responses:
        "200":
          description: "챌린지 수정 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  title:
                    type: string
                    example: "Updated Next.js 챌린지"
                  field:
                    type: string
                    example: "NEXTJS"
                  docType:
                    type: string
                    example: "BLOG"
                  docUrl:
                    type: string
                    example: "https://example.com/updated-doc"
                  deadline:
                    type: string
                    format: date-time
                    example: "2025-03-15T23:59:59Z"
                  maxParticipants:
                    type: integer
                    example: 15
                  content:
                    type: string
                    example: "이 챌린지는 Next.js를 배우고 블로그로 기록하는 챌린지입니다."
        "400":
          description: "잘못된 요청 (입력값 검증 실패)"
        "401":
          description: "인증 실패 (관리자 권한 필요)"
        "403":
          description: "권한 없음 (관리자 전용 API)"
        "404":
          description: "챌린지를 찾을 수 없음"
        "500":
          description: "서버 오류"
    delete:
      summary: "챌린지 삭제(관리자전용)"
      description: "특정 챌린지를 삭제하는 API"
      tags:
        - challenges
      parameters:
        - name: challengeId
          in: path
          required: true
          description: "삭제제할 챌린지의 ID"
          schema:
            type: string
      responses:
        "204":
          description: "챌린지 삭제 성공"
        "400":
          description: "잘못된 요청 (입력값 검증 실패)"
        "401":
          description: "인증 실패 (관리자 권한 필요)"
        "403":
          description: "권한 없음 (관리자 전용 API)"
        "404":
          description: "챌린지를 찾을 수 없음"
        "500":
          description: "서버 오류"

  /challenges/:challengeId/participation:
    post:
      summary: "챌린지 참가"
      description: "챌린지 참가하는 API, 챌린지가 ACCEPTED 상태이고, 빈자리가 있으며, 마감되지않을 경우에만 가능"
      tags:
        - challenges
      parameters:
        - name: challengeId
          in: path
          required: true
          description: "참가할 챌린지의 ID"
          schema:
            type: string
      responses:
        "200":
          description: "챌린지 참가 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "abc123"
                  userId:
                    type: string
                    example: "abc123"
                  challengeId:
                    type: string
                    example: "abc123"
        "400":
          description: "잘못된 요청 (입력값 검증 실패)"
        "401":
          description: "인증 실패 (관리자 권한 필요)"
        "404":
          description: "챌린지를 찾을 수 없음"
        "500":
          description: "서버 오류"
