// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(uuid())
  email             String        @unique
  encryptedPassword String
  nickname          String        @unique
  createdAt         DateTime      @default(now())
  grade             Grade
  role              Role
  Application       Application[]
}

model Challenge {
  id              String        @id @default(uuid())
  title           String
  field           Field
  docType         DocType
  docUrl          String
  deadLine        DateTime
  progress        Boolean       @default(false)
  participants    Int
  maxParticipants Int
  Application     Application[]
}

model Application {
  id                  String            @id @default(uuid())
  user                User              @relation(fields: [userId], references: [id])
  challenge           Challenge         @relation(fields: [challengeId], references: [id])
  userId              String
  challengeId         String
  status              ApplicationStatus @default(WAITING)
  appliedAt           DateTime
  invalidationComment String?
  invaildatedAt       DateTime?
}

//바뀔예정 
enum Role {
  GENERAL
  EXPERT
  ADMIN
}

enum Grade {
  GENERAL
  EXPERT
}

enum Field {
  NEXTJS
  CAREER
  MODERNJS
  WEB
}

enum DocType {
  BLOG
  DOCS
}

enum ApplicationStatus {
  WAITING
  ACCEPTED
  REJECTED
  DELTED
}
